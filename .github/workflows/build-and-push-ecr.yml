name: Build and Push Docker Image to ECR

on:
  push:
    branches:
      - main  # Adjust branch name as needed

env:
  AWS_ACCOUNT_ID: "575108942639"  # Store your AWS Account ID in Secrets
  AWS_REGION: me-central-1         # Store your AWS Region in Secrets
  ECR_REPOSITORY: dizno/sga        # Store your ECR Repository name in Secrets
  ROLE_NAME: ${{ secrets.ROLE_NAME }}  # Store the IAM Role name in Secrets
  LAMBDA_NAME: dizno-dev-ecs-cluster01-sga-dep
  IMAGE_TAG: ${{ github.sha }}  # Optional: Unique tag based on commit hash
  DOCKERFILE: Dockerfile.pub

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        id: configure-aws-credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/${{ secrets.ROLE_NAME }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Log in to Amazon ECR
        id: login-ecr
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

      - name: Build Docker image
        run: |
          ECR_REPOSITORY_URI=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}
          docker build -t $ECR_REPOSITORY_URI:$IMAGE_TAG -f ${{ secrets.DOCKERFILE }} .

      - name: Push Docker image to ECR
        run: |
          ECR_REPOSITORY_URI=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}
          docker push $ECR_REPOSITORY_URI:$IMAGE_TAG

  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    needs: build-and-push
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        id: configure-aws-credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/${{ secrets.ROLE_NAME }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Push Docker image to ECR and invoke Lambda
        run: |
          ECR_REPOSITORY_URI=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}
          aws lambda invoke \
            --cli-binary-format raw-in-base64-out \
            --region ${{ secrets.AWS_REGION }} \
            --function-name ${{ secrets.LAMBDA_NAME }} \
            --payload '{"imageName": "'"$ECR_REPOSITORY_URI:$IMAGE_TAG"'"}' \
            response.json
